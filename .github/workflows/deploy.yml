name: Deploy

on:
  push:
    branches:
    - development
    - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies and create build
        if: github.ref == 'refs/heads/development'
        env:
          REACT_APP_USER_POOL_ID: ${{ secrets.DEV_COGNITO_USER_POOL_ID }}
          REACT_APP_COGNITO_CLIENT_ID: ${{ secrets.DEV_COGNITO_USER_POOL_CLIENT_ID }}
          CI: false
        run: |
          yarn
          yarn build
      
      - name: Deploy
        if: github.ref == 'refs/heads/development'
        run: aws s3 sync ./build s3://${{ secrets.DEV_AWS_BUCKET_FRONT_END }}

      - name: Invalidate CloudFront
        if: github.ref == 'refs/heads/development'
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DEV_DISTRIBUTION_FRONT }}
          PATHS: "/*"
          AWS_REGION: "${{ secrets.AWS_REGION }}"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
